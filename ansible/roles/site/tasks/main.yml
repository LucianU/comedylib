---
- name: clone project to /tmp
  git: repo={{ repo_url }} dest={{ temp_dir }}
  when: ENV != "development"

- name: install pip requirements
  pip: requirements={{ pip_requirements_file }}
       virtualenv={{ project_venv_path }}
  sudo: yes

- name: run syncdb, migrate and collectstatic commands
  django_manage: command={{ item }} app_path={{ temp_dir }}
                 settings={{ django_settings_file }}
                 pythonpath={{ temp_dir }}
                 virtualenv={{ project_venv_path }}
  with_items:
    - syncdb
    - migrate
    - collectstatic
    - update_index
  sudo: yes
  sudo_user: "{{ app_user }}"

- name: sync 'manage.py' to repo root
  command: rsync -av {{ temp_dir }}/manage.py {{ repo_root }}/
  when: ENV != "development"
  sudo: yes

- name: sync project code to repo root
  command: rsync -avz --delete {{ temp_dir }}/{{ repo_name }} {{ repo_root}}/
  when: ENV != "development"
  sudo: yes

- name: create config dir
  file: path="{{ newrelic_config_file | dirname }}" state=directory
        owner={{ app_user }} group={{ app_group }}
  sudo: yes

- name: copy over the newrelic config
  copy: src=newrelic.ini dest={{ newrelic_config_file }}
        owner={{ app_user }} group={{ app_group }}
  notify:
    - restart supervisord
  sudo: yes
